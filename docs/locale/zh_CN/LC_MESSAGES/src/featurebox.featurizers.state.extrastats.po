# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, boliqq07
# This file is distributed under the same license as the featurebox package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: featurebox \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-18 11:52+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../src/featurebox.featurizers.state.extrastats.rst:2
msgid "featurebox.featurizers.state.extrastats module"
msgstr ""

#: featurebox.featurizers.state.extrastats:1 of
msgid "General methods for computing property statistics from a list of values"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats:1 of
msgid "Bases: :class:`object`"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats:1 of
msgid ""
"This class contains statistical operations that are commonly employed "
"when computing features. The primary way for interacting with this class "
"is to call the ``calc_stat`` function, which takes the x_name of the "
"statistic you would like to compute and the weights/values of datamnist "
"to be assessed. For example, computing the mean of a list looks like:"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats:12 of
msgid ""
"Some of the statistics functions take options (e.g., Holder means). You "
"can pass them to the the statistics functions by adding them after the "
"x_name and two colons. For example, the 0th Holder mean would be:"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats:16 of
msgid ">>>PropertyStats.calc_stat(x, 'holder_mean::0')"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats:18 of
msgid ""
"You can, of course, call the statistical functions directly. All take at "
"least two arguments.  The first is the datamnist being assessed and the "
"second, optional, argument is the weights."
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.avg_dev:1 of
msgid ""
"Mean absolute deviation of list of element datamnist. This is computed by"
" first calculating the mean of the list, and then computing the average "
"absolute difference between each value and the mean. :param data_lst: "
"List of values to be assessed :type data_lst: list of floats :param "
"weights: Weights for each value :type weights: list of floats"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.avg_dev
#: featurebox.featurizers.state.extrastats.PropertyStats.calc_stat
#: featurebox.featurizers.state.extrastats.PropertyStats.geom_std_dev
#: featurebox.featurizers.state.extrastats.PropertyStats.inverse_mean
#: featurebox.featurizers.state.extrastats.PropertyStats.kurtosis
#: featurebox.featurizers.state.extrastats.PropertyStats.maximum
#: featurebox.featurizers.state.extrastats.PropertyStats.mean
#: featurebox.featurizers.state.extrastats.PropertyStats.minimum
#: featurebox.featurizers.state.extrastats.PropertyStats.mode
#: featurebox.featurizers.state.extrastats.PropertyStats.quantile
#: featurebox.featurizers.state.extrastats.PropertyStats.range
#: featurebox.featurizers.state.extrastats.PropertyStats.skewness
#: featurebox.featurizers.state.extrastats.PropertyStats.std_dev of
msgid "Returns"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.avg_dev:10 of
msgid "mean absolute deviation"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.calc_stat:1 of
msgid "Compute a property statistic"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.calc_stat of
msgid "Parameters"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.calc_stat:3 of
msgid "list of values"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.calc_stat:10 of
msgid "(Optional) weights for each element in data_lst"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.calc_stat:13 of
msgid "float - Desired statistic"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.eigenvalues:1 of
msgid ""
"Return the eigenvalues of a matrix as a numpy array :param data_lst: "
"(matrix-like) of values :param symm: whether to assume the matrix is "
"symmetric :param sort: wheter to sort the eigenvalues"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.eigenvalues:6 of
msgid "Returns: eigenvalues"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.flatten:1 of
msgid "Returns a flattened copy of data_lst-as a numpy array"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.geom_std_dev:1 of
msgid ""
"Geometric standard deviation :param data_lst: List of values to be "
"assessed :type data_lst: list of floats :param weights: Weights for each "
"value :type weights: list of floats"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.geom_std_dev:7 of
msgid "geometric standard deviation"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.holder_mean:1 of
msgid ""
"Get Holder mean :param data_lst: (list/array) of values :param weights: "
"(list/array) of weights :param power: (int/float/str) which holder mean "
"to compute"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.holder_mean:6 of
msgid "Returns: Holder mean"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.inverse_mean:1 of
msgid ""
"Mean of the inverse of each entry :param data_lst: List of values to be "
"assessed :type data_lst: list of floats :param weights: Weights for each "
"value :type weights: list of floats"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.inverse_mean:7 of
msgid "inverse mean"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.kurtosis:1 of
msgid ""
"Kurtosis of a list of datamnist :param data_lst: List of values to be "
"assessed :type data_lst: list of floats :param weights: Weights for each "
"value :type weights: list of floats"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.kurtosis:7 of
msgid "kurtosis"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.maximum:1 of
msgid ""
"Maximum value in a list :param data_lst: List of values to be assessed "
":type data_lst: list of floats :param weights: (ignored)"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.maximum:6 of
msgid "maximum value"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.mean:1 of
msgid ""
"Arithmetic mean of list :param data_lst: List of values to be assessed "
":type data_lst: list of floats :param weights: Weights for each value "
":type weights: list of floats"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.mean:7 of
msgid "mean value"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.minimum:1 of
msgid ""
"Minimum value in a list :param data_lst: List of values to be assessed "
":type data_lst: list of floats :param weights: (ignored)"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.minimum:6 of
msgid "minimum value"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.mode:1 of
msgid ""
"Mode of a list of datamnist. If multiple elements occur equally-"
"frequently (or same weight, if weights are provided), this function will "
"return the minimum of those values. :param data_lst: List of values to be"
" assessed :type data_lst: list of floats :param weights: Weights for each"
" value :type weights: list of floats"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.mode:10 of
msgid "mode"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.quantile:1 of
msgid ""
"Return a specific quantile. :param data_lst: 1D datamnist list to be used"
" for computing, quantiles :type data_lst: list or np.ndarray :param q: "
"The quantile, as a fraction between 0 and 1. :type q: float"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.quantile:7 of
msgid "(float) The computed quantile of the data_lst."
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.range:1 of
msgid ""
"Range of a list :param data_lst: List of values to be assessed :type "
"data_lst: list of floats :param weights: (ignored)"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.range:6 of
msgid "range"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.skewness:1 of
msgid ""
"Skewness of a list of datamnist :param data_lst: List of values to be "
"assessed :type data_lst: list of floats :param weights: Weights for each "
"value :type weights: list of floats"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.skewness:7 of
msgid "shewness"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.sorted:1 of
msgid "Returns the sorted data_lst"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.std_dev:1 of
msgid ""
"Standard deviation of a list of element datamnist :param data_lst: List "
"of values to be assessed :type data_lst: list of floats :param weights: "
"Weights for each value :type weights: list of floats"
msgstr ""

#: featurebox.featurizers.state.extrastats.PropertyStats.std_dev:7 of
msgid "standard deviation"
msgstr ""

