# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, boliqq07
# This file is distributed under the same license as the featurebox package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: featurebox \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-24 10:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../src/featurebox.models_geo.rst:2
msgid "featurebox.models\\_geo package"
msgstr ""

#: ../../src/featurebox.models_geo.rst:10
msgid "Submodules"
msgstr ""

#: ../../src/featurebox.models_geo.rst:13
msgid "featurebox.models\\_geo.basemodel module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:21
msgid "featurebox.models\\_geo.cgcnn module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:29
msgid "featurebox.models\\_geo.cggat module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:37
msgid "featurebox.models\\_geo.cggcn module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:45
msgid "featurebox.models\\_geo.cggcn2 module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:53
msgid "featurebox.models\\_geo.cggrunet module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:61
msgid "featurebox.models\\_geo.flow\\_geo module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:69
msgid "featurebox.models\\_geo.general module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:77
msgid "featurebox.models\\_geo.log\\_model module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:85
msgid "featurebox.models\\_geo.megnet module"
msgstr ""

#: ../../src/featurebox.models_geo.rst:93
msgid "featurebox.models\\_geo.schnet module"
msgstr ""

#~ msgid ""
#~ "Computes the mean absolute error between"
#~ " prediction and target :param prediction:"
#~ " :type prediction: torch.Tensor (N, 1) "
#~ ":param target: :type target: torch.Tensor "
#~ "(N, 1)"
#~ msgstr ""

#~ msgid "This part contains base model for crystal problem and tools."
#~ msgstr ""

#~ msgid "Bases: :class:`object`"
#~ msgstr ""

#~ msgid ""
#~ "For (BaseStructureGraphGEO) without edge "
#~ "index, this is one lazy way to "
#~ "calculate edge ."
#~ msgstr ""

#~ msgid "Bases: :class:`torch.nn.modules.module.Module`"
#~ msgstr ""

#~ msgid "Base model for crystal problem."
#~ msgstr ""

#~ msgid "Model for crystal problem."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "(int) input number of node feature (atom feature)."
#~ msgstr ""

#~ msgid ""
#~ "(int) input number of bond feature. "
#~ "if ``num_edge_gaussians` offered, this "
#~ "parameter is neglect."
#~ msgstr ""

#~ msgid "(int) input number of state feature."
#~ msgstr ""

#~ msgid ""
#~ "(int) number of embeddings, For generate"
#~ " the initial embedding matrix to on"
#~ " behalf of node feature."
#~ msgstr ""

#~ msgid "(int) num_node_hidden_channels for node feature."
#~ msgstr ""

#~ msgid "(int) channels for node feature."
#~ msgstr ""

#~ msgid "(int) conv number."
#~ msgstr ""

#~ msgid ""
#~ "(int) number of gaussian Smearing number"
#~ " for radius. deprecated, keep this "
#~ "compact with your bond data."
#~ msgstr ""

#~ msgid "(float) cutoff for calculate neighbor bond."
#~ msgstr ""

#~ msgid "(str) Merge node method. such as \"add\",\"mean\",\"max\",\"mean\"."
#~ msgstr ""

#~ msgid "(float) mean for y."
#~ msgstr ""

#~ msgid "(float) std for y."
#~ msgstr ""

#~ msgid "(bool) False or True norm for y."
#~ msgstr ""

#~ msgid ""
#~ "(torch.tensor shape (120,1)) properties for"
#~ " atom. such as target y is "
#~ "volumes of compound, atom_ref could be"
#~ " the atom volumes of all atom "
#~ "(H,H,He,Li,...). And you could copy the"
#~ " first term to make sure the "
#~ "`H` index start form 1."
#~ msgstr ""

#~ msgid "(bool,str) just used \"z\" or used \"x\" to calculate."
#~ msgstr ""

#~ msgid ""
#~ "(Callable) torch module for interactions "
#~ "dynamically: pass the torch module to"
#~ " interactions parameter.static: re-define "
#~ "the ``get_interactions_layer`` and keep this"
#~ " parameter is None. the forward input"
#~ " is (h, edge_index, edge_weight, edge_attr,"
#~ " data=data)"
#~ msgstr ""

#~ msgid ""
#~ "(Callable) torch module for interactions  "
#~ "dynamically: pass the torch module to"
#~ " interactions parameter. static: re-define"
#~ " the ``get_interactions_layer`` and keep "
#~ "this parameter is None. the forward "
#~ "input is (out,)"
#~ msgstr ""

#~ msgid "(bool) add state attribute before output."
#~ msgstr ""

#~ msgid ""
#~ "(int) number of out size. for "
#~ "regression,is 1 and for classification "
#~ "should be defined."
#~ msgstr ""

#~ msgid "Defines the computation performed at every call."
#~ msgstr ""

#~ msgid "Should be overridden by all subclasses."
#~ msgstr ""

#~ msgid ""
#~ "Although the recipe for forward pass "
#~ "needs to be defined within this "
#~ "function, one should call the "
#~ ":class:`Module` instance afterwards instead of"
#~ " this since the former takes care "
#~ "of running the registered hooks while"
#~ " the latter silently ignores them."
#~ msgstr ""

#~ msgid ""
#~ "This part shloud re-defined. And "
#~ "must add the ``interactions`` attribute."
#~ msgstr ""

#~ msgid "Examples::"
#~ msgstr ""

#~ msgid ""
#~ "This part shloud re-defined. And "
#~ "must add the ``readout_layer`` attribute."
#~ msgstr ""

#~ msgid ""
#~ "Smear the radius shape (num_node,1) to"
#~ " shape (num_node, num_edge_gaussians)."
#~ msgstr ""

#~ msgid "General Merge node layer."
#~ msgstr ""

#~ msgid ""
#~ "Initializes internal Module state, shared "
#~ "by both nn.Module and ScriptModule."
#~ msgstr ""

#~ msgid "Simple ResNet"
#~ msgstr ""

#~ msgid "Merge node layer."
#~ msgstr ""

#~ msgid "Softplus with one log2 intercept."
#~ msgstr ""

#~ msgid ""
#~ "This is one general script. For "
#~ "different data, you should re-write "
#~ "this and tune."
#~ msgstr ""

#~ msgid "Bases: :class:`torch_geometric.nn.conv.cg_conv.CGConv`"
#~ msgstr ""

#~ msgid "Bases: :class:`featurebox.models_geo.basemodel.BaseCrystalModel`"
#~ msgstr ""

#~ msgid "CrystalGraph."
#~ msgstr ""

#~ msgid "CrystalGraph with GAT."
#~ msgstr ""

#~ msgid "Bases: :class:`torch_geometric.nn.conv.gat_conv.GATConv`"
#~ msgstr ""

#~ msgid "CrystalGraph with GCN."
#~ msgstr ""

#~ msgid "Bases: :class:`torch_geometric.nn.conv.gcn_conv.GCNConv`"
#~ msgstr ""

#~ msgid "CrystalGraph with GCN2."
#~ msgstr ""

#~ msgid "Bases: :class:`torch_geometric.nn.conv.gcn2_conv.GCN2Conv`"
#~ msgstr ""

#~ msgid "CrystalGraph with CGGRUN. weight_decay=0.001, best."
#~ msgstr ""

#~ msgid "Bases: :class:`torch_geometric.nn.conv.nn_conv.NNConv`"
#~ msgstr ""

#~ msgid "Bases: :class:`torch_geometric.nn.glob.set2set.Set2Set`"
#~ msgstr ""

#~ msgid "Computes and stores the average and current value"
#~ msgstr ""

#~ msgid "LearningFlow for training."
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr ""

#~ msgid "x"
#~ msgstr ""

#~ msgid ""
#~ "where the dataset could from "
#~ ":class:`featurebox.test_featurizers.base_graph_geo.StructureGraphGEO`"
#~ msgstr ""

#~ msgid "such as \"cuda:0\",\"cpu\""
#~ msgstr ""

#~ msgid "under exploit......"
#~ msgstr ""

#~ msgid "see more in torch"
#~ msgstr ""

#~ msgid "save checkpoint or not."
#~ msgstr ""

#~ msgid "print frequency"
#~ msgstr ""

#~ msgid "\"all\",\"train\",\"test\" log."
#~ msgstr ""

#~ msgid "scheduler, see more in torch"
#~ msgstr ""

#~ msgid "function to get y/label."
#~ msgstr ""

#~ msgid "Return MAE score."
#~ msgstr ""

#~ msgid "Just predict by model,and add one forward hook to get put."
#~ msgstr ""

#~ msgid "MGEDataLoader, the target_y could be ``None``."
#~ msgstr ""

#~ msgid "if return_y_true, return (y_preds, y_true)"
#~ msgstr ""

#~ msgid ""
#~ "if add_hook, the model must contain "
#~ "torch native nn.ModuleList named ``fcs`` "
#~ "such as ``self.fcs = nn.ModuleList(...)`` "
#~ "in module."
#~ msgstr ""

#~ msgid "user-defined hook layer name."
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "* **y_pred** (*tensor*) * **y_true** (*tensor*) -- if return_y_true"
#~ msgstr ""

#~ msgid "**y_pred** (*tensor*)"
#~ msgstr ""

#~ msgid "**y_true** (*tensor*) -- if return_y_true"
#~ msgstr ""

#~ msgid "run loop."
#~ msgstr ""

#~ msgid "epoch."
#~ msgstr ""

#~ msgid ""
#~ "The name of resume file, "
#~ "'checkpoint.pth.tar' or 'model_best.pth.tar' If "
#~ "warm_start, try to resume from local "
#~ "disk."
#~ msgstr ""

#~ msgid "Classification."
#~ msgstr ""

#~ msgid "Computes the mean absolute error between prediction and target"
#~ msgstr ""

#~ msgid "Operation utilities on lists and arrays, for torch,"
#~ msgstr ""

#~ msgid "Notes"
#~ msgstr ""

#~ msgid "just for network."
#~ msgstr ""

#~ msgid ""
#~ "Check if array complies with shape. "
#~ "Shape is a sequence of integer "
#~ "that may end with None. If None"
#~ " is at the end of shape, then"
#~ " any shapes in array after that "
#~ "dimension will match with shape."
#~ msgstr ""

#~ msgid ""
#~ "Example: array with shape [10, 20, "
#~ "30, 40] matches with [10, 20, "
#~ "None], but"
#~ msgstr ""

#~ msgid "does not match with shape [10, 20, 30, 20]"
#~ msgstr ""

#~ msgid "array to be checked"
#~ msgstr ""

#~ msgid "integer array shape, it may ends with None"
#~ msgstr ""

#~ msgid "Returns: bool"
#~ msgstr ""

#~ msgid "From MessagePassing.__collect__, jump edge_attr from adj"
#~ msgstr ""

#~ msgid "Faster version of label binarize"
#~ msgstr ""

#~ msgid ""
#~ "`label_binarize` from scikit-learn is "
#~ "slow when run 1 label at a "
#~ "time. `label_binarize` also is efficient "
#~ "for large numbers of classes, which "
#~ "is not common in `megnet`"
#~ msgstr ""

#~ msgid "Value to encode"
#~ msgstr ""

#~ msgid "Possible class values"
#~ msgstr ""

#~ msgid "List of integers"
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid "Trans batch index to ptr"
#~ msgstr ""

#~ msgid "Get prop."
#~ msgstr ""

#~ msgid "From MessagePassing.__lift__, jump edge_attr from adj"
#~ msgstr ""

#~ msgid "From:"
#~ msgstr ""

#~ msgid "import torch_geometric.transforms as T T.ToSparseTensor()"
#~ msgstr ""

#~ msgid ""
#~ "Make sure all the edge prop is "
#~ "spared together!!! for example "
#~ "edge_index,edge_weight,edge_attr...,due to index is"
#~ " resort"
#~ msgstr ""

#~ msgid "If x is not a list, convert it to list"
#~ msgstr ""

#~ msgid "Split arrays or matrices into random train and test subsets"
#~ msgstr ""

#~ msgid ""
#~ "Quick utility that wraps input "
#~ "validation and ``next(ShuffleSplit().split(X, y))``"
#~ " and application to input data into"
#~ " a single call for splitting (and "
#~ "optionally subsampling) data in a "
#~ "oneliner."
#~ msgstr ""

#~ msgid ""
#~ "Allowed inputs are lists, numpy arrays,"
#~ " scipy-sparse matrices or pandas "
#~ "dataframes."
#~ msgstr ""

#~ msgid ""
#~ "If float, should be between 0.0 "
#~ "and 1.0 and represent the proportion "
#~ "of the dataset to include in the"
#~ " test split. If int, represents the"
#~ " absolute number of test samples. If"
#~ " None, the value is set to the"
#~ " complement of the train size. If "
#~ "``train_size`` is also None, it will "
#~ "be set to 0.25."
#~ msgstr ""

#~ msgid ""
#~ "If float, should be between 0.0 "
#~ "and 1.0 and represent the proportion "
#~ "of the dataset to include in the"
#~ " train split. If int, represents the"
#~ " absolute number of train samples. If"
#~ " None, the value is automatically set"
#~ " to the complement of the test "
#~ "size."
#~ msgstr ""

#~ msgid ""
#~ "Controls the shuffling applied to the"
#~ " data before applying the split. Pass"
#~ " an int for reproducible output "
#~ "across multiple function calls."
#~ msgstr ""

#~ msgid ""
#~ "Whether or not to shuffle the data"
#~ " before splitting. If shuffle=False then"
#~ " stratify must be None."
#~ msgstr ""

#~ msgid ""
#~ "If not None, data is split in "
#~ "a stratified fashion, using this as "
#~ "the class labels."
#~ msgstr ""

#~ msgid ""
#~ "pack the pack to format, pack=None: "
#~ "(0:n-1) pack=0: (0:n-1:2, 1:n:2) pack=1: "
#~ "(0:n-3:2, -2, 1:n-2:2, -1) pack=2: "
#~ "(0:n-5:2, -4, -2, 1:n-4:2, -3, -1)"
#~ msgstr ""

#~ msgid "Examples"
#~ msgstr ""

#~ msgid "Produces Graphviz representation of PyTorch autograd graph."
#~ msgstr ""

#~ msgid "First install graphviz:"
#~ msgstr ""

#~ msgid ""
#~ "https://forum.graphviz.org/t/new-simplified-"
#~ "installation-procedure-on-windows/224  (windows)"
#~ msgstr ""

#~ msgid "yum install graphviz (centos)"
#~ msgstr ""

#~ msgid "apt-get install graphviz (centos)"
#~ msgstr ""

#~ msgid "Second:"
#~ msgstr ""

#~ msgid "pip install graphviz pip install torchviz"
#~ msgstr ""

#~ msgid "use:"
#~ msgstr ""

#~ msgid ""
#~ "If a node represents a backward "
#~ "function, it is gray. Otherwise, the "
#~ "node represents a tensor and is "
#~ "either blue, orange, or green:"
#~ msgstr ""

#~ msgid "Blue: reachable leaf tensors that requires grad (tensors whose `.grad`"
#~ msgstr ""

#~ msgid "fields will be populated during `.backward()`)"
#~ msgstr ""

#~ msgid "Orange: saved tensors of custom autograd functions as well as those"
#~ msgstr ""

#~ msgid "saved by built-in backward nodes"
#~ msgstr ""

#~ msgid "Green: tensor passed in as outputs"
#~ msgstr ""

#~ msgid "Dark green: if any output is a view, we represent its base tensor with"
#~ msgstr ""

#~ msgid "a dark green node."
#~ msgstr ""

#~ msgid "output tensor"
#~ msgstr ""

#~ msgid ""
#~ "dict of (name, tensor) to add "
#~ "names to node that requires grad "
#~ "params=dict(model.named_parameters()"
#~ msgstr ""

#~ msgid ""
#~ "whether to display non-tensor attributes"
#~ " of backward nodes (Requires PyTorch "
#~ "version >= 1.9)"
#~ msgstr ""

#~ msgid ""
#~ "whether to display saved tensor nodes"
#~ " that are not by custom autograd "
#~ "functions. Saved tensor nodes for custom"
#~ " functions, if present, are always "
#~ "displayed. (Requires PyTorch version >= "
#~ "1.9)"
#~ msgstr ""

#~ msgid ""
#~ "if show_attrs is `True`, sets max "
#~ "number of characters to display for "
#~ "any given attribute."
#~ msgstr ""

#~ msgid ""
#~ "This is a simple version for "
#~ "mgenet, where the bond update iteration"
#~ " is omitted."
#~ msgstr ""

#~ msgid ""
#~ "This is a reconstitution version from"
#~ "  pytorch_geometric/ torch_geometric / nn /"
#~ " models_geo / schnet.py."
#~ msgstr ""

#~ msgid "SchNet."
#~ msgstr ""

