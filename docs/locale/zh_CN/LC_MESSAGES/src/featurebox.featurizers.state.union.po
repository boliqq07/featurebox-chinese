# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, boliqq07
# This file is distributed under the same license as the featurebox package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: featurebox \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-18 11:52+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../src/featurebox.featurizers.state.union.rst:2
msgid "featurebox.featurizers.state.union module"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:1 of
msgid ""
"Bases: :class:`featurebox.featurizers.base_feature.BaseFeature`, "
":class:`abc.ABC`"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:1 of
msgid "Extension method."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:3 of
msgid "Such as degree = 2 means (x1x2,x1**2,x2**2)"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:6
#: featurebox.featurizers.state.union.UnionFeature:4 of
msgid "Examples"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:12 of
msgid ""
"n   f0^1     f1^1  f0^2  f0^1*f1^1      f1^2 0   0.0  0.422068   0.0   "
"0.000000  0.178141 1   1.0  0.360958   1.0   0.360958  0.130291 2   2.0  "
"0.201433   4.0   0.402866  0.040575 3   3.0 -0.459164   9.0  -1.377492  "
"0.210832 4   4.0 -0.064783  16.0  -0.259132  0.004197 5   5.0 -0.250939  "
"25.0  -1.254695  0.062970"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature
#: featurebox.featurizers.state.union.PolyFeature.fit_transform
#: featurebox.featurizers.state.union.UnionFeature
#: featurebox.featurizers.state.union.UnionFeature.convert
#: featurebox.featurizers.state.union.UnionFeature.set_feature_labels
#: featurebox.featurizers.state.union.UnionFeature.transform of
msgid "Parameters"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:20
#: featurebox.featurizers.state.union.UnionFeature:35 of
msgid "size of batch."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:22
#: featurebox.featurizers.state.union.UnionFeature:37 of
msgid "batch_calculate or not."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:24
#: featurebox.featurizers.state.union.UnionFeature:39 of
msgid "Parallel number."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:26
#: featurebox.featurizers.state.union.UnionFeature:41 of
msgid ""
"How to handle the exceptions in a feature calculations. Can be ``nan``, "
"``keep``, ``raise``. When 'nan', return a column with np.nan. The length "
"of column corresponding to the number of feature labs. The default is "
"'raise' which will raise up the exception."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature:31
#: featurebox.featurizers.state.union.UnionFeature:46 of
msgid ""
"Specific the return type. Can be ``any``, ``np``,``array`` and ``df``. "
"'array' and 'df' force return type to np.ndarray and pd.DataFrame "
"respectively. If 'any', without type conversion . Default is 'any'"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform:1 of
msgid "If `convert` takes multiple inputs, supply inputs as a list of tuples."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform:3 of
msgid ""
"Copy from Mixin class for all transformers in scikit-learn. "
"TransformerMixin"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform:5 of
msgid "Fit to data, then transform it."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform:7 of
msgid ""
"Fits transformer to `X` and `y` with optional parameters `fit_params` and"
" returns a transformed version of `X`."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform:10 of
msgid "list of case."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform:12 of
msgid "deprecated."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform:14 of
msgid ""
"Additional fit or transform parameters. feature_labels_mark: str, mark "
"for each feature_labes. for return_type =='pd'. x_labels: list, mark for "
"each row. for return_type =='pd'."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform
#: featurebox.featurizers.state.union.PolyFeature.set_feature_labels
#: featurebox.featurizers.state.union.UnionFeature.convert
#: featurebox.featurizers.state.union.UnionFeature.set_feature_labels
#: featurebox.featurizers.state.union.UnionFeature.transform of
msgid "Returns"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform:18 of
msgid "result data."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.fit_transform
#: featurebox.featurizers.state.union.UnionFeature.convert
#: featurebox.featurizers.state.union.UnionFeature.set_feature_labels
#: featurebox.featurizers.state.union.UnionFeature.transform of
msgid "Return type"
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.set_feature_labels:1
#: featurebox.featurizers.state.union.UnionFeature.set_feature_labels:1 of
msgid "Generate attribute names."
msgstr ""

#: featurebox.featurizers.state.union.PolyFeature.set_feature_labels:3 of
msgid "([str]) attribute labels."
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature:1 of
msgid "Bases: :class:`featurebox.featurizers.base_feature.BaseFeature`"
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature:1 of
msgid "Transform method should input0 comp_index rather than entries."
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.convert:1 of
msgid "Get elemental property attributes"
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.convert:3 of
msgid "Pymatgen composition object"
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.convert:5 of
msgid "Specified property statistics of features :param comp_number:"
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.transform:1 of
msgid ""
"Transform a list of entries. Each iterable element of entries is "
"corresponding to the parameter of ``convert``, If ``convert`` takes n "
"multiple inputs, the transform inputs should be a list or tuple (size n),"
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.transform:4 of
msgid "[(p1,p2),(p1,p2),(p1,p2),...,(p1,p2),(p1,p2)]"
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.transform:6 of
msgid "which can be from `zip`` or used the built-in ``transform_with_zip``."
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.transform:8 of
msgid "A list of entries to be featured."
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.transform:11 of
msgid "**result** -- features for each entry."
msgstr ""

#: featurebox.featurizers.state.union.UnionFeature.set_feature_labels:3 of
msgid "name"
msgstr ""

